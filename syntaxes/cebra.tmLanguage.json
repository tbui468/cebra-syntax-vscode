{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "cebra",
	"patterns": [
        {
            "include": "#comments"
        },
		{
			"include": "#keywords"
		},
        {
            "include": "#types"
        },
        {
            "include": "#accessors"
        },
		{
			"include": "#strings"
		},
        {
            "include": "#constants"
        }
	],
	"repository": {
		"comments": {
			"patterns": [
                {
                    "name": "comment.line.double-slash.cebra",
                    "match": "\\/\\/.*"
                },
                {
                    "name": "keyword.control.cebra",
                    "match": "\\b(if|else|while|for|foreach|when|is|struct|enum|and|or|as)\\b"
                },
                {
                    "name": "keyword.control.cebra",
                    "match": "(::|:=|:|==|!=|<=|>=|=|\\+|\\*|\\/|->|-)"
                }
			]
		},
		"types": {
			"patterns": [
                {
                    "name": "storage.type.cebra",
                    "match": "\\b(List|Map|string|int|float|bool)\\b"
                },
                {
                    "name": "entity.name.cebra",
                    "match": "\\w+(?=\\()"
                },
                {
                    "name": "entity.name.type.cebra",
                    "match": "\\w*\\s*(?=::\\s*\\()"
                }
            ]
		},
        "accessors": {
            "patterns": [
                {
                    "name": "variable.parameter.cebra",
                    "match": "(?<=\\.)\\w*"
                }
            ]
        },
		"keywords": {
			"patterns": [{
				"name": "keyword.control.cebra",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.cebra",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.cebra",
					"match": "\\\\."
				}
			]
		},
        "constants": {
            "patterns": [
                {
                    "name": "constant.numeric.cebra",
                    "match": "\\b(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)\\b"
                },
                {
                    "name": "constant.language.cebra",
                    "match": "\\b(true|false|nil)\\b"
                }
            ]
        }
    },
    "scopeName": "source.cebra"
}
